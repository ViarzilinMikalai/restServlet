package org.verzilin.servlet_api.dao.impl;

import org.h2.tools.RunScript;
import org.junit.Before;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.testcontainers.containers.PostgreSQLContainer;
import org.testcontainers.junit.jupiter.Container;
import org.testcontainers.junit.jupiter.Testcontainers;
import org.verzilin.servlet_api.config.JdbcConnect;
import org.verzilin.servlet_api.domain.Post;
import org.verzilin.servlet_api.domain.User;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import static org.junit.Assert.assertThat;
import static org.junit.jupiter.api.Assertions.assertEquals;


@Testcontainers
public class PostDaoImplTest {
    PostDaoImpl postDao = new PostDaoImpl();

    @Container
    PostgreSQLContainer psql = new PostgreSQLContainer("postgres:14.1-alpine")
            .withDatabaseName("foo")
            .withUsername("foo")
            .withPassword("secret");

    @Test
    void test() {
        System.out.println(psql.isRunning());
//        assert(psql.isRunning()).isTrue());
    }
//    @BeforeAll
//    void setUp() {
//        psql.start();
//        try {
//            RunScript.execute(JdbcConnect.getConnection(), new FileReader("/home/mikalai/Рабочий стол/restServlet/src/test/resources/db_init.sql"));
//        } catch (SQLException e) {
//            throw new RuntimeException(e);
//        } catch (ClassNotFoundException e) {
//            throw new RuntimeException(e);
//        } catch (FileNotFoundException e) {
//            throw new RuntimeException(e);
//        }
//    }

    @Test
    public void testSavePost() throws SQLException, ClassNotFoundException {
        User user = new User();
        user.setId(1L);
        Post post = new Post("Post title", "Post text", user);
        postDao.savePost(post);
            Connection conn = JdbcConnect.getConnection();
            String createTable = "DROP TABLE post IF EXISTS; CREATE TABLE post (id INTEGER GENERATED BY DEFAULT AS IDENTITY, title VARCHAR(255), text VARCHAR(2000), author INTEGER)";
            PreparedStatement stmt = conn.prepareStatement(createTable);
            stmt.execute();
        String selectAll = "SELECT * FROM post";
//        Connection conn = JdbcConnect.getConnection();
        stmt = conn.prepareStatement(selectAll);
        ResultSet rs = stmt.executeQuery();
        if (rs.next()) {
            rs.next();
            assertEquals(rs.getString("title"), "Post title");
            rs.next();
            assertEquals(rs.getString("text"), "Post text");
        }

    }



//        try {
//
//            Connection conn = JdbcConnect.getConnection();
//            String createTable = "CREATE TABLE post (id INTEGER AUTO_INCREMENT, title VARCHAR(255), text VARCHAR(2000), PRIMARY KEY(id))";
//            PreparedStatement stmt = conn.prepareStatement(createTable);
//            stmt.execute();
//
//            String insertData = "INSERT INTO Users (name) VALUES ('John')";
//            stmt = conn.prepareStatement(insertData);
//            stmt.execute();
//
//            String selectAll = "SELECT * FROM Users";
//            stmt = conn.prepareStatement(selectAll);
//            ResultSet rs = stmt.executeQuery();
//
//            rs.next();
//            assertEquals(1, rs.getInt("id"));
//            assertEquals("John", rs.getString("name"));
//        } catch (Exception e) {
//
//        }
//    }

    @Test
    void updatePost() {
    }
}